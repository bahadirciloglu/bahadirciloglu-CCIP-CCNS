/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CrossChainNameServiceLookup,
  CrossChainNameServiceLookupInterface,
} from "../../contracts/CrossChainNameServiceLookup";

const _abi = [
  {
    inputs: [],
    name: "AlreadyTaken",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "Registered",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "lookup",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "nameToAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "crossChainNameService",
        type: "address",
      },
    ],
    name: "setCrossChainNameServiceAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50338060008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000087576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200007e90620002a7565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146200010e576200010d816200011760201b60201c565b5b5050506200033b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000188576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200017f9062000319565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600082825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000600082015250565b60006200028f60188362000246565b91506200029c8262000257565b602082019050919050565b60006020820190508181036000830152620002c28162000280565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006200030160178362000246565b91506200030e82620002c9565b602082019050919050565b600060208201905081810360008301526200033481620002f2565b9050919050565b610c75806200034b6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806379ba50971161005b57806379ba5097146100ea5780638da5cb5b146100f4578063f2fde38b14610112578063f67187ac1461012e5761007d565b806308d88aad146100825780631e59c529146100b25780636f2aba19146100ce575b600080fd5b61009c60048036038101906100979190610908565b61015e565b6040516100a99190610992565b60405180910390f35b6100cc60048036038101906100c791906109d9565b6101a7565b005b6100e860048036038101906100e39190610a35565b61038c565b005b6100f26103d8565b005b6100fc61056d565b6040516101099190610992565b60405180910390f35b61012c60048036038101906101279190610a35565b610596565b005b61014860048036038101906101439190610908565b6105aa565b6040516101559190610992565b60405180910390f35b6002818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461022e576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166002836040516102569190610ad3565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102d2576040517f303973dc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806002836040516102e39190610ad3565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16826040516103549190610ad3565b60405180910390207f50f74ca45caac8020b8d891bd13ea5a2d79564986ee6a839f0d914896388322d60405160405180910390a35050565b6103946105f2565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610468576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045f90610b47565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61059e6105f2565b6105a781610682565b50565b60006002826040516105bc9190610ad3565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610680576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067790610bb3565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e790610c1f565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610815826107cc565b810181811067ffffffffffffffff82111715610834576108336107dd565b5b80604052505050565b60006108476107ae565b9050610853828261080c565b919050565b600067ffffffffffffffff821115610873576108726107dd565b5b61087c826107cc565b9050602081019050919050565b82818337600083830152505050565b60006108ab6108a684610858565b61083d565b9050828152602081018484840111156108c7576108c66107c7565b5b6108d2848285610889565b509392505050565b600082601f8301126108ef576108ee6107c2565b5b81356108ff848260208601610898565b91505092915050565b60006020828403121561091e5761091d6107b8565b5b600082013567ffffffffffffffff81111561093c5761093b6107bd565b5b610948848285016108da565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061097c82610951565b9050919050565b61098c81610971565b82525050565b60006020820190506109a76000830184610983565b92915050565b6109b681610971565b81146109c157600080fd5b50565b6000813590506109d3816109ad565b92915050565b600080604083850312156109f0576109ef6107b8565b5b600083013567ffffffffffffffff811115610a0e57610a0d6107bd565b5b610a1a858286016108da565b9250506020610a2b858286016109c4565b9150509250929050565b600060208284031215610a4b57610a4a6107b8565b5b6000610a59848285016109c4565b91505092915050565b600081519050919050565b600081905092915050565b60005b83811015610a96578082015181840152602081019050610a7b565b60008484015250505050565b6000610aad82610a62565b610ab78185610a6d565b9350610ac7818560208601610a78565b80840191505092915050565b6000610adf8284610aa2565b915081905092915050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b6000610b31601683610aea565b9150610b3c82610afb565b602082019050919050565b60006020820190508181036000830152610b6081610b24565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b6000610b9d601683610aea565b9150610ba882610b67565b602082019050919050565b60006020820190508181036000830152610bcc81610b90565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b6000610c09601783610aea565b9150610c1482610bd3565b602082019050919050565b60006020820190508181036000830152610c3881610bfc565b905091905056fea264697066735822122085f4fffa57a705e30ed3c3406d966a714731b977f0bd03983d82afaaf76dbba764736f6c63430008130033";

type CrossChainNameServiceLookupConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrossChainNameServiceLookupConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CrossChainNameServiceLookup__factory extends ContractFactory {
  constructor(...args: CrossChainNameServiceLookupConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CrossChainNameServiceLookup> {
    return super.deploy(
      overrides || {}
    ) as Promise<CrossChainNameServiceLookup>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CrossChainNameServiceLookup {
    return super.attach(address) as CrossChainNameServiceLookup;
  }
  override connect(signer: Signer): CrossChainNameServiceLookup__factory {
    return super.connect(signer) as CrossChainNameServiceLookup__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrossChainNameServiceLookupInterface {
    return new utils.Interface(_abi) as CrossChainNameServiceLookupInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrossChainNameServiceLookup {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CrossChainNameServiceLookup;
  }
}
